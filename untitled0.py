# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GhWhy6uZ4sQhZasqc6W_oNGl-IMUGJ8D
"""

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB

# Örnek etiketlenmiş veri
texts = ['I love this movie', 'This book is boring', 'The music is really good']
labels = ['positive', 'negative', 'neatural']

# CountVectorizer kullanarak özellikleri oluşturma
vectorizer = CountVectorizer()
features = vectorizer.fit_transform(texts)

# Naive Bayes modelini eğitme
clf = MultinomialNB()
clf.fit(features, labels)

# Etiketlenmemiş örnek veriler
unlabeled_texts = ['This movie is great!', 'I do not like this song']

# Özellikleri oluşturma
unlabeled_features = vectorizer.transform(unlabeled_texts)

# Tahminler yapma
predictions = clf.predict(unlabeled_features)

# Sonuçları yazdırma
for text, prediction in zip(unlabeled_texts, predictions):
    print(f"{text} => {prediction}")

import pandas as pd
from textblob import TextBlob

# Örnek veri seti oluşturuyoruz
data = pd.DataFrame({'text': ['Bu film gerçekten harikaydı!',
                              'Bu kitap çok sıkıcı geldi bana.',
                              'Bu yemek gerçekten lezzetliydi.'],
                     'label': [None, None, None]})

# Duygu analizi fonksiyonu tanımlıyoruz
def sentiment_analysis(text):
    blob = TextBlob(text)
    if blob.sentiment.polarity > 0:
        return 'positive'
    elif blob.sentiment.polarity < 0:
        return 'negative'
    else:
        return 'neutral'

# Veri setindeki tüm metinleri analiz ediyoruz
data['label'] = data['text'].apply(sentiment_analysis)

# Sonucu ekrana yazdırıyoruz
print(data)